
package simplestblog;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.10-b140803.1500
 * Generated source version: 2.2
 * 
 */
@WebService(name = "SimplestBlog", targetNamespace = "http://simplestblog/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface SimplestBlog {


    /**
     * 
     * @param query
     * @return
     *     returns java.util.List<simplestblog.Post>
     * @throws JSONException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "search", targetNamespace = "http://simplestblog/", className = "simplestblog.Search")
    @ResponseWrapper(localName = "searchResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.SearchResponse")
    @Action(input = "http://simplestblog/SimplestBlog/searchRequest", output = "http://simplestblog/SimplestBlog/searchResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://simplestblog/SimplestBlog/search/Fault/IOException"),
        @FaultAction(className = JSONException_Exception.class, value = "http://simplestblog/SimplestBlog/search/Fault/JSONException")
    })
    public List<Post> search(
        @WebParam(name = "query", targetNamespace = "")
        String query)
        throws IOException_Exception, JSONException_Exception
    ;

    /**
     * 
     * @param arg0
     * @return
     *     returns java.lang.String
     * @throws MalformedURLException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getData", targetNamespace = "http://simplestblog/", className = "simplestblog.GetData")
    @ResponseWrapper(localName = "getDataResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.GetDataResponse")
    @Action(input = "http://simplestblog/SimplestBlog/getDataRequest", output = "http://simplestblog/SimplestBlog/getDataResponse", fault = {
        @FaultAction(className = MalformedURLException_Exception.class, value = "http://simplestblog/SimplestBlog/getData/Fault/MalformedURLException"),
        @FaultAction(className = IOException_Exception.class, value = "http://simplestblog/SimplestBlog/getData/Fault/IOException")
    })
    public String getData(
        @WebParam(name = "arg0", targetNamespace = "")
        String arg0)
        throws IOException_Exception, MalformedURLException_Exception
    ;

    /**
     * 
     * @param password
     * @param role
     * @param nama
     * @param email
     * @param username
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addUser", targetNamespace = "http://simplestblog/", className = "simplestblog.AddUser")
    @ResponseWrapper(localName = "addUserResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.AddUserResponse")
    @Action(input = "http://simplestblog/SimplestBlog/addUserRequest", output = "http://simplestblog/SimplestBlog/addUserResponse")
    public Boolean addUser(
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @return
     *     returns java.util.List<simplestblog.Users>
     * @throws JSONException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listUser", targetNamespace = "http://simplestblog/", className = "simplestblog.ListUser")
    @ResponseWrapper(localName = "listUserResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.ListUserResponse")
    @Action(input = "http://simplestblog/SimplestBlog/listUserRequest", output = "http://simplestblog/SimplestBlog/listUserResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://simplestblog/SimplestBlog/listUser/Fault/IOException"),
        @FaultAction(className = JSONException_Exception.class, value = "http://simplestblog/SimplestBlog/listUser/Fault/JSONException")
    })
    public List<Users> listUser()
        throws IOException_Exception, JSONException_Exception
    ;

    /**
     * 
     * @param nama
     * @param konten
     * @param email
     * @param idPost
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addComment", targetNamespace = "http://simplestblog/", className = "simplestblog.AddComment")
    @ResponseWrapper(localName = "addCommentResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.AddCommentResponse")
    @Action(input = "http://simplestblog/SimplestBlog/addCommentRequest", output = "http://simplestblog/SimplestBlog/addCommentResponse")
    public Boolean addComment(
        @WebParam(name = "id_post", targetNamespace = "")
        String idPost,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "konten", targetNamespace = "")
        String konten);

    /**
     * 
     * @return
     *     returns java.util.List<simplestblog.Post>
     * @throws JSONException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listPost", targetNamespace = "http://simplestblog/", className = "simplestblog.ListPost")
    @ResponseWrapper(localName = "listPostResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.ListPostResponse")
    @Action(input = "http://simplestblog/SimplestBlog/listPostRequest", output = "http://simplestblog/SimplestBlog/listPostResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://simplestblog/SimplestBlog/listPost/Fault/IOException"),
        @FaultAction(className = JSONException_Exception.class, value = "http://simplestblog/SimplestBlog/listPost/Fault/JSONException")
    })
    public List<Post> listPost()
        throws IOException_Exception, JSONException_Exception
    ;

    /**
     * 
     * @param konten
     * @param tanggal
     * @param judul
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "addPost", targetNamespace = "http://simplestblog/", className = "simplestblog.AddPost")
    @ResponseWrapper(localName = "addPostResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.AddPostResponse")
    @Action(input = "http://simplestblog/SimplestBlog/addPostRequest", output = "http://simplestblog/SimplestBlog/addPostResponse")
    public Boolean addPost(
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "konten", targetNamespace = "")
        String konten);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "deleteUser", targetNamespace = "http://simplestblog/", className = "simplestblog.DeleteUser")
    @ResponseWrapper(localName = "deleteUserResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.DeleteUserResponse")
    @Action(input = "http://simplestblog/SimplestBlog/deleteUserRequest", output = "http://simplestblog/SimplestBlog/deleteUserResponse")
    public Boolean deleteUser(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @return
     *     returns java.util.List<simplestblog.Comment>
     * @throws JSONException_Exception
     * @throws IOException_Exception
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listComment", targetNamespace = "http://simplestblog/", className = "simplestblog.ListComment")
    @ResponseWrapper(localName = "listCommentResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.ListCommentResponse")
    @Action(input = "http://simplestblog/SimplestBlog/listCommentRequest", output = "http://simplestblog/SimplestBlog/listCommentResponse", fault = {
        @FaultAction(className = IOException_Exception.class, value = "http://simplestblog/SimplestBlog/listComment/Fault/IOException"),
        @FaultAction(className = JSONException_Exception.class, value = "http://simplestblog/SimplestBlog/listComment/Fault/JSONException")
    })
    public List<Comment> listComment()
        throws IOException_Exception, JSONException_Exception
    ;

    /**
     * 
     * @param konten
     * @param id
     * @param tanggal
     * @param statusDelete
     * @param judul
     * @param status
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editPost", targetNamespace = "http://simplestblog/", className = "simplestblog.EditPost")
    @ResponseWrapper(localName = "editPostResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.EditPostResponse")
    @Action(input = "http://simplestblog/SimplestBlog/editPostRequest", output = "http://simplestblog/SimplestBlog/editPostResponse")
    public Boolean editPost(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "judul", targetNamespace = "")
        String judul,
        @WebParam(name = "tanggal", targetNamespace = "")
        String tanggal,
        @WebParam(name = "konten", targetNamespace = "")
        String konten,
        @WebParam(name = "status", targetNamespace = "")
        String status,
        @WebParam(name = "status_delete", targetNamespace = "")
        String statusDelete);

    /**
     * 
     * @param password
     * @param role
     * @param nama
     * @param id
     * @param email
     * @param username
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "editUser", targetNamespace = "http://simplestblog/", className = "simplestblog.EditUser")
    @ResponseWrapper(localName = "editUserResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.EditUserResponse")
    @Action(input = "http://simplestblog/SimplestBlog/editUserRequest", output = "http://simplestblog/SimplestBlog/editUserResponse")
    public Boolean editUser(
        @WebParam(name = "id", targetNamespace = "")
        String id,
        @WebParam(name = "username", targetNamespace = "")
        String username,
        @WebParam(name = "password", targetNamespace = "")
        String password,
        @WebParam(name = "nama", targetNamespace = "")
        String nama,
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "role", targetNamespace = "")
        String role);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "publishPost", targetNamespace = "http://simplestblog/", className = "simplestblog.PublishPost")
    @ResponseWrapper(localName = "publishPostResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.PublishPostResponse")
    @Action(input = "http://simplestblog/SimplestBlog/publishPostRequest", output = "http://simplestblog/SimplestBlog/publishPostResponse")
    public Boolean publishPost(
        @WebParam(name = "id", targetNamespace = "")
        String id);

    /**
     * 
     * @param id
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "softDelete", targetNamespace = "http://simplestblog/", className = "simplestblog.SoftDelete")
    @ResponseWrapper(localName = "softDeleteResponse", targetNamespace = "http://simplestblog/", className = "simplestblog.SoftDeleteResponse")
    @Action(input = "http://simplestblog/SimplestBlog/softDeleteRequest", output = "http://simplestblog/SimplestBlog/softDeleteResponse")
    public Boolean softDelete(
        @WebParam(name = "id", targetNamespace = "")
        String id);

}
